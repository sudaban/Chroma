#ifndef PACKET_H
#define PACKET_H

#include <cstdint>
#include <iostream>

enum TankPacketType
{
	PACKET_STATE,
	PACKET_CALL_FUNCTION,
	PACKET_UPDATE_STATUS,
	PACKET_TILE_CHANGE_REQUEST,
	PACKET_SEND_MAP_DATA,
	PACKET_SEND_TILE_UPDATE_DATA,
	PACKET_SEND_TILE_UPDATE_DATA_MULTIPLE,
	PACKET_TILE_ACTIVATE_REQUEST,
	PACKET_TILE_APPLY_DAMAGE,
	PACKET_SEND_INVENTORY_STATE,
	PACKET_ITEM_ACTIVATE_REQUEST,
	PACKET_ITEM_ACTIVATE_OBJECT_REQUEST,
	PACKET_SEND_TILE_TREE_STATE,
	PACKET_MODIFY_ITEM_INVENTORY,
	PACKET_ITEM_CHANGE_OBJECT,
	PACKET_SEND_LOCK,
	PACKET_SEND_ITEM_DATABASE_DATA,
	PACKET_SEND_PARTICLE_EFFECT,
	PACKET_SET_ICON_STATE,
	PACKET_ITEM_EFFECT,
	PACKET_SET_CHARACTER_STATE,
	PACKET_PING_REPLY,
	PACKET_PING_REQUEST,
	PACKET_GOT_PUNCHED,
	PACKET_APP_CHECK_RESPONSE,
	PACKET_APP_INTEGRITY_FAIL,
	PACKET_DISCONNECT,
	PACKET_BATTLE_JOIN,
	PACKET_BATTLE_EVENT,
	PACKET_USE_DOOR,
	PACKET_SEND_PARENTAL,
	PACKET_GONE_FISHIN,
	PACKET_STEAM,
	PACKET_PET_BATTLE,
	PACKET_NPC,
	PACKET_SPECIAL,
	PACKET_SEND_PARTICLE_EFFECT_V2,
	PACKET_ACTIVE_ARROW_TO_ITEM,
	PACKET_SELECT_TILE_INDEX,
	PACKET_SEND_PLAYER_TRIBUTE_DATA,
	PACKET_FTUE_SET_ITEM_TO_QUICK_INVENTORY,
	PACKET_PVE_NPC,
	PACKET_PVPCARD_BATTLE,
	PACKET_PVE_APPLY_PLAYER_DAMAGE,
	PACKET_PVE_NPC_POSITION_UPDATE,
	PACKET_SET_EXTRA_MODS,
	PACKET_ON_STEP_ON_TILE_MOD,
	PACKET_MAXVAL
};

enum PacketType
{
	NET_MESSAGE_UNKNOWN = 0,
	NET_MESSAGE_SERVER_HELLO,
	NET_MESSAGE_GENERIC_TEXT,
	NET_MESSAGE_GAME_MESSAGE,
	NET_MESSAGE_GAME_PACKET,
	NET_MESSAGE_ERROR,
	NET_MESSAGE_TRACK,
	NET_MESSAGE_CLIENT_LOG_REQUEST,
	NET_MESSAGE_CLIENT_LOG_RESPONSE,
	NET_MESSAGE_GENERIC_TEXT2 = 0x69,
	NET_MESSAGE_GENERIC_TEXT3 = 0x48,
	NET_MESSAGE_CLIENT_LOG_GETASYNC = 0x24,
	NET_MESSAGE_CLIENT_TRACK_RESPONSE = 0x83,
	NET_MESSAGE_CLIENT_SYSTEM_RESPONSE = 0x44
};

enum TankPacketFlags
{
	NET_GAME_PACKET_FLAG_NONE = 0x0,
	NET_GAME_PACKET_FLAG_UPDATE = 0x1,
	NET_GAME_PACKET_FLAG_FLYING = 0x2,
	NET_GAME_PACKET_FLAG_RESET_VISUAL_STATE = 0x4,
	NET_GAME_PACKET_FLAG_EXTENDED = 0x8,
	NET_GAME_PACKET_FLAG_FACING_LEFT = 0x10,
	NET_GAME_PACKET_FLAG_ON_SOLID = 0x20,
	NET_GAME_PACKET_FLAG_ON_FIRE_DAMAGE = 0x40,
	NET_GAME_PACKET_FLAG_ON_JUMP = 0x80,
	NET_GAME_PACKET_FLAG_ON_KILLED = 0x100,
	NET_GAME_PACKET_FLAG_ON_PUNCHED = 0x200,
	NET_GAME_PACKET_FLAG_ON_PLACED = 0x400,
	NET_GAME_PACKET_FLAG_ON_TILE_ACTION = 0x800,
	NET_GAME_PACKET_FLAG_ON_GOT_PUNCHED = 0x1000,
	NET_GAME_PACKET_FLAG_ON_RESPAWNED = 0x2000,
	NET_GAME_PACKET_FLAG_ON_COLLECT_OBJECT = 0x4000,
	NET_GAME_PACKET_FLAG_ON_TRAMPOLINE = 0x8000,
	NET_GAME_PACKET_FLAG_ON_DAMAGE = 0x10000,
	NET_GAME_PACKET_FLAG_ON_SLIDE = 0x20000,
	NET_GAME_PACKET_FLAG_ON_PARASOL = 0x40000,
	NET_GAME_PACKET_FLAG_ON_JUMP_PEAK = 0x80000,
	NET_GAME_PACKET_FLAG_ON_SWIM = 0x100000,
	NET_GAME_PACKET_FLAG_ON_WALL_HANG = 0x200000,
	NET_GAME_PACKET_FLAG_ON_PUNCH_START = 0x400000,
	NET_GAME_PACKET_FLAG_ON_PUNCH_END = 0x800000,
	NET_GAME_PACKET_FLAG_ON_PUNCH_LOAD = 0x1000000,
	NET_GAME_PACKET_FLAG_ON_PUNCH_FORCE = 0x2000000,
	NET_GAME_PACKET_FLAG_ON_OVERDAMAGE = 0x4000000,
	NET_GAME_PACKET_FLAG_UNK_0x8000000 = 0x8000000,
	NET_GAME_PACKET_FLAG_ON_ACID_DAMAGE = 0x10000000
};

struct TankPacket
{
	uint32_t Type = 0;
	int32_t NetID = 0;
	uint32_t Padding_1 = 0;
	uint32_t State = 0;
	uint32_t Padding_2 = 0;
	uint32_t TargetID = 0;
	float X = 0;
	float Y = 0;
	float XSpeed = 0;
	float YSpeed = 0;
	uint32_t Padding_3 = 0;
	uint32_t TargetX = 0;
	uint32_t TargetY = 0;
	uint32_t PacketLength = 0;
};

class Packet
{
public:
	static std::string GetTankPacketName(uint32_t type)
	{
		switch (type) {
		case PACKET_STATE: return "PACKET_STATE";
		case PACKET_CALL_FUNCTION: return "PACKET_CALL_FUNCTION";
		case PACKET_UPDATE_STATUS: return "PACKET_UPDATE_STATUS";
		case PACKET_TILE_CHANGE_REQUEST: return "PACKET_TILE_CHANGE_REQUEST";
		case PACKET_SEND_MAP_DATA: return "PACKET_SEND_MAP_DATA";
		case PACKET_SEND_TILE_UPDATE_DATA: return "PACKET_SEND_TILE_UPDATE_DATA";
		case PACKET_SEND_TILE_UPDATE_DATA_MULTIPLE: return "PACKET_SEND_TILE_UPDATE_DATA_MULTIPLE";
		case PACKET_TILE_ACTIVATE_REQUEST: return "PACKET_TILE_ACTIVATE_REQUEST";
		case PACKET_TILE_APPLY_DAMAGE: return "PACKET_TILE_APPLY_DAMAGE";
		case PACKET_SEND_INVENTORY_STATE: return "PACKET_SEND_INVENTORY_STATE";
		case PACKET_ITEM_ACTIVATE_REQUEST: return "PACKET_ITEM_ACTIVATE_REQUEST";
		case PACKET_ITEM_ACTIVATE_OBJECT_REQUEST: return "PACKET_ITEM_ACTIVATE_OBJECT_REQUEST";
		case PACKET_SEND_TILE_TREE_STATE: return "PACKET_SEND_TILE_TREE_STATE";
		case PACKET_MODIFY_ITEM_INVENTORY: return "PACKET_MODIFY_ITEM_INVENTORY";
		case PACKET_ITEM_CHANGE_OBJECT: return "PACKET_ITEM_CHANGE_OBJECT";
		case PACKET_SEND_LOCK: return "PACKET_SEND_LOCK";
		case PACKET_SEND_ITEM_DATABASE_DATA: return "PACKET_SEND_ITEM_DATABASE_DATA";
		case PACKET_SEND_PARTICLE_EFFECT: return "PACKET_SEND_PARTICLE_EFFECT";
		case PACKET_SET_ICON_STATE: return "PACKET_SET_ICON_STATE";
		case PACKET_ITEM_EFFECT: return "PACKET_ITEM_EFFECT";
		case PACKET_SET_CHARACTER_STATE: return "PACKET_SET_CHARACTER_STATE";
		case PACKET_PING_REPLY: return "PACKET_PING_REPLY";
		case PACKET_PING_REQUEST: return "PACKET_PING_REQUEST";
		case PACKET_GOT_PUNCHED: return "PACKET_GOT_PUNCHED";
		case PACKET_APP_CHECK_RESPONSE: return "PACKET_APP_CHECK_RESPONSE";
		case PACKET_APP_INTEGRITY_FAIL: return "PACKET_APP_INTEGRITY_FAIL";
		case PACKET_DISCONNECT: return "PACKET_DISCONNECT";
		case PACKET_BATTLE_JOIN: return "PACKET_BATTLE_JOIN";
		case PACKET_BATTLE_EVENT: return "PACKET_BATTLE_EVENT";
		case PACKET_USE_DOOR: return "PACKET_USE_DOOR";
		case PACKET_SEND_PARENTAL: return "PACKET_SEND_PARENTAL";
		case PACKET_GONE_FISHIN: return "PACKET_GONE_FISHIN";
		case PACKET_STEAM: return "PACKET_STEAM";
		case PACKET_PET_BATTLE: return "PACKET_PET_BATTLE";
		case PACKET_NPC: return "PACKET_NPC";
		case PACKET_SPECIAL: return "PACKET_SPECIAL";
		case PACKET_SEND_PARTICLE_EFFECT_V2: return "PACKET_SEND_PARTICLE_EFFECT_V2";
		case PACKET_ACTIVE_ARROW_TO_ITEM: return "PACKET_ACTIVE_ARROW_TO_ITEM";
		case PACKET_SELECT_TILE_INDEX: return "PACKET_SELECT_TILE_INDEX";
		case PACKET_SEND_PLAYER_TRIBUTE_DATA: return "PACKET_SEND_PLAYER_TRIBUTE_DATA";
		case PACKET_FTUE_SET_ITEM_TO_QUICK_INVENTORY: return "PACKET_FTUE_SET_ITEM_TO_QUICK_INVENTORY";
		case PACKET_PVE_NPC: return "PACKET_PVE_NPC";
		case PACKET_PVPCARD_BATTLE: return "PACKET_PVPCARD_BATTLE";
		case PACKET_PVE_APPLY_PLAYER_DAMAGE: return "PACKET_PVE_APPLY_PLAYER_DAMAGE";
		case PACKET_PVE_NPC_POSITION_UPDATE: return "PACKET_PVE_NPC_POSITION_UPDATE";
		case PACKET_SET_EXTRA_MODS: return "PACKET_SET_EXTRA_MODS";
		case PACKET_ON_STEP_ON_TILE_MOD: return "PACKET_ON_STEP_ON_TILE_MOD";
		case PACKET_MAXVAL: return "PACKET_MAXVAL";
		default: return "UNKNOWN_PACKET_TYPE";
		}
	}
};

#endif